name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node.js for frontend tests
      - name: Set up Node.js
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        if: matrix.service == 'frontend'
        working-directory: frontend
        run: npm install

      - name: Run Frontend Tests
        if: matrix.service == 'frontend'
        working-directory: frontend
        run: npm test

      # Setup .NET for backend tests
      - name: Set up .NET
        if: matrix.service == 'backend'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore Backend Dependencies
        if: matrix.service == 'backend'
        working-directory: backend
        run: dotnet restore

      - name: Run Backend Tests
        if: matrix.service == 'backend'
        working-directory: backend
        run: dotnet test

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Build Frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      # Build Backend
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Build Backend
        working-directory: backend
        run: dotnet publish -c Release -o ./publish

  package:
    name: Package for Deployment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Prepare Frontend Package
        working-directory: frontend
        run: |
          tar -czf frontend.tar.gz ./build
        continue-on-error: false

      - name: Prepare Backend Package
        working-directory: backend
        run: |
          tar -czf backend.tar.gz ./publish
        continue-on-error: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-packages
          path: |
            frontend/frontend.tar.gz
            backend/backend.tar.gz
